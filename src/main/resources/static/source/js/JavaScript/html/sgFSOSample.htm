<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>FileSystemObject 示例代码</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="sgfsosample"></A>FileSystemObject 示例代码</H1>

<P>在本节描述的示例代码，提供真实的例子来示范在 <B>FileSystemObject</B> 对象模式中可用的许多功能。该代码显示了如何一起使用对象模式的所有功能，以及如何在您自己的代码中有效地使用这些功能。</P>

<P>请注意，由于该代码是极一般的，所以要使该代码能够真正在您的机器上运行，可能需要一些其他代码和小小的变更。这些改变之所以必要，是因为在 Active Server Pages 和 Windows Scripting Host 之间，为输入和输出给用户采用了不同的方法。</P>

<P>要在 Active Server Pages 上运行该代码，则采取以下步骤：</P>

<P>创建一个标准的 Web 页，后缀名为 .asp。 </P>

<P>把下面的示例代码复制到 &amp;ltBODY&gt;...&lt;/BODY&gt; 标记之间的文件中。 </P>

<P>把所有代码包装器到 &lt;%...%&gt; 标记内。 </P>

<P>把 <B>Option Explicit</B> 语句从当前位置移动到 HTML 页的最顶部，甚至在 &lt;HTML&gt; 开始标记前。 </P>

<P>把 &lt;%...%&gt; 标记放置在 <B>Option Explicit</B> 语句周围，以保证它在服务器端运行。 </P>

<P>把下面的代码添加到示例代码末尾： </P>

<PRE><CODE>Sub Print(x)
</CODE>&nbsp;&nbsp;&nbsp;<CODE>Response.Write "&lt;PRE&gt;&amp;ltFONT FACE=""</CODE>宋体<CODE>"" SIZE=""1""&gt;"</CODE>
<CODE>&nbsp;&nbsp;&nbsp;Response.Write x</CODE>
<CODE>&nbsp;&nbsp;&nbsp;Response.Write "&lt;/FONT&gt;&lt;/PRE&gt;"</CODE>
<CODE>End Sub</CODE>
<CODE>Main</CODE></PRE>

<P>前面的代码增加一个将在服务器端运行，但在客户端显示结果的打印过程。要在 Windows Scripting Host 上运行该代码，则把下面的代码添加到示例代码的末尾： </P>

<PRE><CODE>Sub Print(x)
</CODE>&nbsp;&nbsp;&nbsp;<CODE>WScript.Echo x</CODE>
<CODE>End Sub</CODE>
<CODE>Main</CODE></PRE>

<P>下面就是示例代码：</P>

<PRE><CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' FileSystemObject </CODE>示例代码
<CODE>'Copyright 1998  Microsoft Corporation</CODE>。&nbsp;&nbsp;&nbsp;保留所有权利。<CODE> </CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Option Explicit</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' </CODE>对于代码质量：
<CODE>' 1) </CODE>下面的代码有许多字符串操作，用<CODE>"&amp;"</CODE>运算符来把短字符串连接在一起。由于
<CODE>'    </CODE>字符串连接是费时的，所以这是一种低效率的写代码方法。无论如何，它是
<CODE>'    </CODE>一种非常好维护的写代码方法，并且在这儿使用了这种方法，因为该程序执行
<CODE>'    </CODE>大量的磁盘操作，而磁盘操作比连接字符串所需的内存操作要慢得多。
<CODE>'    </CODE>记住这是示范代码，而不是产品代码。
<CODE>'</CODE>
<CODE>' 2) </CODE>使用了<CODE> "Option Explicit"</CODE>，因为访问声明过的变量，比访问未声明的变量要
<CODE>'    </CODE>稍微快一些。它还能阻止在代码中发生错误，例如，把<CODE> DriveTypeCDROM </CODE>误拼
<CODE>'    </CODE>成了<CODE> DriveTypeCDORM </CODE>。
<CODE>'</CODE>
<CODE>' 3) </CODE>为了使代码更可读，该代码中没有错误处理。虽然采取了防范措施，来保证代码
<CODE>'    </CODE>在普通情况下没有错误，但文件系统是不可预知的。在产品代码中，使用
<CODE>'    On Error Resume Next </CODE>和<CODE> Err </CODE>对象来捕获可能发生的错误。
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' </CODE>一些容易取得的全局变量
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>Dim TabStop</CODE>
<CODE>Dim NewLine</CODE>

<CODE>Const TestDrive = "C"</CODE>
<CODE>Const TestFilePath = "C:\Test"</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' </CODE>由<CODE> Drive.DriveType </CODE>返回的常数
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>Const DriveTypeRemovable = 1</CODE>
<CODE>Const DriveTypeFixed = 2</CODE>
<CODE>Const DriveTypeNetwork = 3</CODE>
<CODE>Const DriveTypeCDROM = 4</CODE>
<CODE>Const DriveTypeRAMDisk = 5</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' </CODE>由<CODE> File.Attributes </CODE>返回的常数
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>Const FileAttrNormal  = 0</CODE>
<CODE>Const FileAttrReadOnly = 1</CODE>
<CODE>Const FileAttrHidden = 2</CODE>
<CODE>Const FileAttrSystem = 4</CODE>
<CODE>Const FileAttrVolume = 8</CODE>
<CODE>Const FileAttrDirectory = 16</CODE>
<CODE>Const FileAttrArchive = 32 </CODE>
<CODE>Const FileAttrAlias = 64</CODE>
<CODE>Const FileAttrCompressed = 128</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' </CODE>用来打开文件的常数
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>Const OpenFileForReading = 1 </CODE>
<CODE>Const OpenFileForWriting = 2 </CODE>
<CODE>Const OpenFileForAppending = 8 </CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>ShowDriveType</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>生成一个字符串，来描述给定<CODE> Drive </CODE>对象的驱动器类型。
<CODE>' </CODE>示范下面的内容
<CODE>' - Drive.DriveType</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>Function ShowDriveType(Drive)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim S</CODE>
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;<CODE>Select Case Drive.DriveType</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Case DriveTypeRemovable</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = "Removable"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Case DriveTypeFixed</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = "Fixed"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Case DriveTypeNetwork</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = "Network"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Case DriveTypeCDROM</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = "CD-ROM"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Case DriveTypeRAMDisk</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = "RAM Disk"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Case Else</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = "Unknown"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>End Select</CODE>

&nbsp;&nbsp;&nbsp;<CODE>ShowDriveType = S</CODE>

<CODE>End Function</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>ShowFileAttr</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>生成一个字符串，来描述文件或文件夹的属性。
<CODE>' </CODE>示范下面的内容
<CODE>' - File.Attributes</CODE>
<CODE>' - Folder.Attributes</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Function ShowFileAttr(File) ' File </CODE>可以是文件或文件夹

&nbsp;&nbsp;&nbsp;<CODE>Dim S</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim Attr</CODE>
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;<CODE>Attr = File.Attributes</CODE>

&nbsp;&nbsp;&nbsp;<CODE>If Attr = 0 Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>ShowFileAttr = "Normal"</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Exit Function</CODE>
&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>

&nbsp;&nbsp;&nbsp;<CODE>If Attr And FileAttrDirectory  Then S = S &amp; "Directory "</CODE>
&nbsp;&nbsp;&nbsp;<CODE>If Attr And FileAttrReadOnly   Then S = S &amp; "Read-Only "</CODE>
&nbsp;&nbsp;&nbsp;<CODE>If Attr And FileAttrHidden     Then S = S &amp; "Hidden "</CODE>
&nbsp;&nbsp;&nbsp;<CODE>If Attr And FileAttrSystem     Then S = S &amp; "System "</CODE>
&nbsp;&nbsp;&nbsp;<CODE>If Attr And FileAttrVolume     Then S = S &amp; "Volume "</CODE>
&nbsp;&nbsp;&nbsp;<CODE>If Attr And FileAttrArchive    Then S = S &amp; "Archive "</CODE>
&nbsp;&nbsp;&nbsp;<CODE>If Attr And FileAttrAlias      Then S = S &amp; "Alias "</CODE>
&nbsp;&nbsp;&nbsp;<CODE>If Attr And FileAttrCompressed Then S = S &amp; "Compressed "</CODE>

&nbsp;&nbsp;&nbsp;<CODE>ShowFileAttr = S</CODE>

<CODE>End Function</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>GenerateDriveInformation</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>生成一个字符串，来描述可用驱动器的当前状态。
<CODE>' </CODE>示范下面的内容
<CODE>'  - FileSystemObject.Drives </CODE>
<CODE>'  - Iterating the Drives collection</CODE>
<CODE>'  - Drives.Count</CODE>
<CODE>'  - Drive.AvailableSpace</CODE>
<CODE>'  - Drive.DriveLetter</CODE>
<CODE>'  - Drive.DriveType</CODE>
<CODE>'  - Drive.FileSystem</CODE>
<CODE>'  - Drive.FreeSpace</CODE>
<CODE>'  - Drive.IsReady</CODE>
<CODE>'  - Drive.Path</CODE>
<CODE>'  - Drive.SerialNumber</CODE>
<CODE>'  - Drive.ShareName</CODE>
<CODE>'  - Drive.TotalSize</CODE>
<CODE>'  - Drive.VolumeName</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Function GenerateDriveInformation(FSO)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim Drives</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim Drive</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim S</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Set Drives = FSO.Drives</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = "Number of drives:" &amp; TabStop &amp; Drives.Count &amp; NewLine &amp; NewLine</CODE>

&nbsp;&nbsp;&nbsp;<CODE>' </CODE>构造报告的第一行。
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; String(2, TabStop) &amp; "Drive" </CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; String(3, TabStop) &amp; "File" </CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Total"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Free"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Available" </CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Serial" &amp; NewLine</CODE>

&nbsp;&nbsp;&nbsp;<CODE>' </CODE>构造报告的第二行。
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; "Letter"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Path"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Type"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Ready?"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Name"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "System"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Space"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Space"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Space"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; "Number" &amp; NewLine</CODE>&nbsp;&nbsp;&nbsp;

&nbsp;&nbsp;&nbsp;<CODE>' </CODE>分隔行。
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; String(105, "-") &amp; NewLine</CODE>

&nbsp;&nbsp;&nbsp;<CODE>For Each Drive In Drives</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; Drive.DriveLetter</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; Drive.Path</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; ShowDriveType(Drive)</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; Drive.IsReady</CODE>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>If Drive.IsReady Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>If DriveTypeNetwork = Drive.DriveType Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; Drive.ShareName </CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Else</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; Drive.VolumeName </CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>End If    </CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; Drive.FileSystem</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; Drive.TotalSize</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; Drive.FreeSpace</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; Drive.AvailableSpace</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TabStop &amp; Hex(Drive.SerialNumber)</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Next  </CODE>

&nbsp;&nbsp;&nbsp;<CODE>GenerateDriveInformation = S</CODE>

<CODE>End Function</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>GenerateFileInformation</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>生成一个字符串，来描述文件的当前状态。
<CODE>' </CODE>示范下面的内容
<CODE>'  - File.Path</CODE>
<CODE>'  - File.Name</CODE>
<CODE>'  - File.Type</CODE>
<CODE>'  - File.DateCreated</CODE>
<CODE>'  - File.DateLastAccessed</CODE>
<CODE>'  - File.DateLastModified</CODE>
<CODE>'  - File.Size</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Function GenerateFileInformation(File)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim S</CODE>

&nbsp;&nbsp;&nbsp;<CODE>S = NewLine &amp; "Path:" &amp; TabStop &amp; File.Path</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Name:" &amp; TabStop &amp; File.Name</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Type:" &amp; TabStop &amp; File.Type</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Attribs:" &amp; TabStop &amp; ShowFileAttr(File)</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Created:" &amp; TabStop &amp; File.DateCreated</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Accessed:" &amp; TabStop &amp; File.DateLastAccessed</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Modified:" &amp; TabStop &amp; File.DateLastModified</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Size" &amp; TabStop &amp; File.Size &amp; NewLine</CODE>

&nbsp;&nbsp;&nbsp;<CODE>GenerateFileInformation = S</CODE>

<CODE>End Function</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>GenerateFolderInformation</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>生成一个字符串，来描述文件夹的当前状态。
<CODE>' </CODE>示范下面的内容
<CODE>'  - Folder.Path</CODE>
<CODE>'  - Folder.Name</CODE>
<CODE>'  - Folder.DateCreated</CODE>
<CODE>'  - Folder.DateLastAccessed</CODE>
<CODE>'  - Folder.DateLastModified</CODE>
<CODE>'  - Folder.Size</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Function GenerateFolderInformation(Folder)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim S</CODE>

&nbsp;&nbsp;&nbsp;<CODE>S = "Path:" &amp; TabStop &amp; Folder.Path</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Name:" &amp; TabStop &amp; Folder.Name</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Attribs:" &amp; TabStop &amp; ShowFileAttr(Folder)</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Created:" &amp; TabStop &amp; Folder.DateCreated</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Accessed:" &amp; TabStop &amp; Folder.DateLastAccessed</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Modified:" &amp; TabStop &amp; Folder.DateLastModified</CODE>
&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "Size:" &amp; TabStop &amp; Folder.Size &amp; NewLine</CODE>

&nbsp;&nbsp;&nbsp;<CODE>GenerateFolderInformation = S</CODE>

<CODE>End Function</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>GenerateAllFolderInformation</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>生成一个字符串，来描述一个文件夹和所有文件及子文件夹的当前状态。
<CODE>' </CODE>示范下面的内容
<CODE>'  - Folder.Path</CODE>
<CODE>'  - Folder.SubFolders</CODE>
<CODE>'  - Folders.Count</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Function GenerateAllFolderInformation(Folder)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim S</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim SubFolders</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim SubFolder</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim Files</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim File</CODE>

&nbsp;&nbsp;&nbsp;<CODE>S = "Folder:" &amp; TabStop &amp; Folder.Path &amp; NewLine &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Set Files = Folder.Files</CODE>

&nbsp;&nbsp;&nbsp;<CODE>If 1 = Files.Count Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; "There is 1 file" &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Else</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; "There are " &amp; Files.Count &amp; " files" &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>

&nbsp;&nbsp;&nbsp;<CODE>If Files.Count &lt;&gt; 0 Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>For Each File In Files</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; GenerateFileInformation(File)</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Next</CODE>
&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Set SubFolders = Folder.SubFolders</CODE>

&nbsp;&nbsp;&nbsp;<CODE>If 1 = SubFolders.Count Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "There is 1 sub folder" &amp; NewLine &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Else</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine &amp; "There are " &amp; SubFolders.Count &amp; " sub folders" &amp; NewLine &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>

&nbsp;&nbsp;&nbsp;<CODE>If SubFolders.Count &lt;&gt; 0 Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>For Each SubFolder In SubFolders</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; GenerateFolderInformation(SubFolder)</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Next</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>For Each SubFolder In SubFolders</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; GenerateAllFolderInformation(SubFolder)</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Next</CODE>
&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>

&nbsp;&nbsp;&nbsp;<CODE>GenerateAllFolderInformation = S</CODE>

<CODE>End Function</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>GenerateTestInformation</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>生成一个字符串，来描述<CODE> C:\Test </CODE>文件夹和所有文件及子文件夹的当前状态。
<CODE>' </CODE>示范下面的内容
<CODE>'  - FileSystemObject.DriveExists</CODE>
<CODE>'  - FileSystemObject.FolderExists</CODE>
<CODE>'  - FileSystemObject.GetFolder</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Function GenerateTestInformation(FSO)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim TestFolder</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim S</CODE>

&nbsp;&nbsp;&nbsp;<CODE>If Not FSO.DriveExists(TestDrive) Then Exit Function</CODE>
&nbsp;&nbsp;&nbsp;<CODE>If Not FSO.FolderExists(TestFilePath) Then Exit Function</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Set TestFolder = FSO.GetFolder(TestFilePath)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>GenerateTestInformation = GenerateAllFolderInformation(TestFolder) </CODE>

<CODE>End Function</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>DeleteTestDirectory</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>清理<CODE> test </CODE>目录。
<CODE>' </CODE>示范下面的内容
<CODE>'  - FileSystemObject.GetFolder</CODE>
<CODE>'  - FileSystemObject.DeleteFile</CODE>
<CODE>'  - FileSystemObject.DeleteFolder</CODE>
<CODE>'  - Folder.Delete</CODE>
<CODE>'  - File.Delete</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Sub DeleteTestDirectory(FSO)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim TestFolder</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim SubFolder</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim File</CODE></PRE>



<PRE>&nbsp;&nbsp;&nbsp;<A NAME="driveinfo"></A>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>有两种方法可用来删除文件：

&nbsp;&nbsp;&nbsp;<CODE>FSO.DeleteFile(TestFilePath &amp; "\Beatles\OctopusGarden.txt")</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Set File = FSO.GetFile(TestFilePath &amp; "\Beatles\BathroomWindow.txt")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>File.Delete</CODE>&nbsp;&nbsp;&nbsp;

&nbsp;&nbsp;&nbsp;<CODE>' </CODE>有两种方法可用来删除文件夹：
&nbsp;&nbsp;&nbsp;<CODE>FSO.DeleteFolder(TestFilePath &amp; "\Beatles")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>FSO.DeleteFile(TestFilePath &amp; "\ReadMe.txt")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Set TestFolder = FSO.GetFolder(TestFilePath)</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TestFolder.Delete</CODE>

<CODE>End Sub</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>CreateLyrics</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>在文件夹中创建两个文本文件。
<CODE>' </CODE>示范下面的内容
<CODE>'  - FileSystemObject.CreateTextFile</CODE>
<CODE>'  - TextStream.WriteLine</CODE>
<CODE>'  - TextStream.Write</CODE>
<CODE>'  - TextStream.WriteBlankLines</CODE>
<CODE>'  - TextStream.Close</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Sub CreateLyrics(Folder)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim TextStream</CODE></PRE>



<PRE>&nbsp;&nbsp;&nbsp;<A NAME="deletefile"></A>
&nbsp;&nbsp;&nbsp;<CODE>Set TextStream = Folder.CreateTextFile("OctopusGarden.txt")</CODE></PRE>



<PRE>&nbsp;&nbsp;&nbsp;<A NAME="createtextfilewritetofile"></A>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.Write("Octopus' Garden ") ' </CODE>请注意，该语句不添加换行到文件中。
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteLine("(by Ringo Starr)")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteBlankLines(1)</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteLine("I'd like to be under the sea in an octopus' garden in the shade,")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteLine("He'd let us in, knows where we've been -- in his octopus' garden in the shade.")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteBlankLines(2)</CODE>
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;<CODE>TextStream.Close</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Set TextStream = Folder.CreateTextFile("BathroomWindow.txt")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteLine("She Came In Through The Bathroom Window (by Lennon/McCartney)")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteLine("")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteLine("She came in through the bathroom window protected by a silver spoon")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteLine("But now she sucks her thumb and wanders by the banks of her own lagoon")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteBlankLines(2)</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.Close</CODE>

<CODE>End Sub</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>GetLyrics</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>显示<CODE> lyrics </CODE>文件的内容。
<CODE>' </CODE>示范下面的内容
<CODE>'  - FileSystemObject.OpenTextFile</CODE>
<CODE>'  - FileSystemObject.GetFile</CODE>
<CODE>'  - TextStream.ReadAll</CODE>
<CODE>'  - TextStream.Close</CODE>
<CODE>'  - File.OpenAsTextStream</CODE>
<CODE>'  - TextStream.AtEndOfStream</CODE>
<CODE>'  - TextStream.ReadLine</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Function GetLyrics(FSO)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim TextStream</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim S</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim File</CODE>

&nbsp;&nbsp;&nbsp;<CODE>' </CODE>有多种方法可用来打开一个文本文件，和多种方法来从文件读取数据。
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>这儿用了两种方法来打开文件和读取文件：

&nbsp;&nbsp;&nbsp;<CODE>Set TextStream = FSO.OpenTextFile(TestFilePath &amp; "\Beatles\OctopusGarden.txt", OpenFileForReading)</CODE></PRE>



<PRE>&nbsp;&nbsp;&nbsp;<A NAME="closereadfromfile"></A>
&nbsp;&nbsp;&nbsp;<CODE>S = TextStream.ReadAll &amp; NewLine &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.Close</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Set File = FSO.GetFile(TestFilePath &amp; "\Beatles\BathroomWindow.txt")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Set TextStream = File.OpenAsTextStream(OpenFileForReading)</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Do </CODE>&nbsp;&nbsp;&nbsp;<CODE>While Not TextStream.AtEndOfStream</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>S = S &amp; TextStream.ReadLine &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Loop</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.Close</CODE>

&nbsp;&nbsp;&nbsp;<CODE>GetLyrics = S</CODE>
&nbsp;&nbsp;&nbsp;
<CODE>End Function</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' <span class=cfe><B>BuildTestDirectory</B></span></CODE>
<CODE>' </CODE>目的：<CODE> </CODE>
<CODE>' </CODE>创建一个目录分层结构来示范<CODE> FileSystemObject</CODE>。
<CODE>' </CODE>以这样的次序来创建分层结构：
<CODE>' C:\Test</CODE>
<CODE>' C:\Test\ReadMe.txt</CODE>
<CODE>' C:\Test\Beatles</CODE>
<CODE>' C:\Test\Beatles\OctopusGarden.txt</CODE>
<CODE>' C:\Test\Beatles\BathroomWindow.txt</CODE>
<CODE>' </CODE>示范下面的内容
<CODE>'  - FileSystemObject.DriveExists</CODE>
<CODE>'  - FileSystemObject.FolderExists</CODE>
<CODE>'  - FileSystemObject.CreateFolder</CODE>
<CODE>'  - FileSystemObject.CreateTextFile</CODE>
<CODE>'  - Folders.Add</CODE>
<CODE>'  - Folder.CreateTextFile</CODE>
<CODE>'  - TextStream.WriteLine</CODE>
<CODE>'  - TextStream.Close</CODE>
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Function BuildTestDirectory(FSO)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim TestFolder</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim SubFolders</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim SubFolder</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Dim TextStream</CODE>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>排除<CODE>(a)</CODE>驱动器不存在，或<CODE>(b)</CODE>要创建的目录已经存在的情况。

&nbsp;&nbsp;&nbsp;<CODE>If Not FSO.DriveExists(TestDrive) Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>BuildTestDirectory = False</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Exit Function</CODE>
&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>

&nbsp;&nbsp;&nbsp;<CODE>If FSO.FolderExists(TestFilePath) Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>BuildTestDirectory = False</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Exit Function</CODE>
&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Set TestFolder = FSO.CreateFolder(TestFilePath)</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Set TextStream = FSO.CreateTextFile(TestFilePath &amp; "\ReadMe.txt")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.WriteLine("My song lyrics collection")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>TextStream.Close</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Set SubFolders = TestFolder.SubFolders</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Set SubFolder = SubFolders.Add("Beatles")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>CreateLyrics SubFolder</CODE>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;<CODE>BuildTestDirectory = True</CODE>

<CODE>End Function</CODE>

<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>
<CODE>' </CODE><span class=cfe><B>主程序</B></span>
<CODE>' </CODE>首先，它创建一个<CODE> test </CODE>目录，以及一些子文件夹和文件。<CODE> </CODE>
<CODE>' </CODE>然后，它转储有关可用磁盘驱动器和<CODE> test </CODE>目录的某些信息，
<CODE>' </CODE>最后，清除<CODE> test </CODE>目录及其所有内容。
<CODE>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</CODE>

<CODE>Sub Main</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Dim FSO</CODE>

&nbsp;&nbsp;&nbsp;<CODE>' </CODE>设立全局变量。
&nbsp;&nbsp;&nbsp;<CODE>TabStop = Chr(9)</CODE>
&nbsp;&nbsp;&nbsp;<CODE>NewLine = Chr(10)</CODE></PRE>



<PRE>&nbsp;&nbsp;&nbsp;<A NAME="folderinfo"></A>
&nbsp;&nbsp;&nbsp;<CODE>Set FSO = CreateObject("Scripting.FileSystemObject")</CODE>

&nbsp;&nbsp;&nbsp;<CODE>If Not BuildTestDirectory(FSO) Then </CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Print "Test directory already exists or cannot be created.  Cannot continue."</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Exit Sub</CODE>
&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>

&nbsp;&nbsp;&nbsp;<CODE>Print GenerateDriveInformation(FSO) &amp; NewLine &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Print GenerateTestInformation(FSO) &amp; NewLine &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Print GetLyrics(FSO) &amp; NewLine &amp; NewLine</CODE>
&nbsp;&nbsp;&nbsp;<CODE>DeleteTestDirectory(FSO)</CODE>

<CODE>End Sub</CODE></PRE>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
