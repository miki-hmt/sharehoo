<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>JScript 字母顺序的关健字列表</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="jslrfjscriptalphakeywordlist"></A>JScript 字母顺序的关键字列表</H1>

<TABLE border=1 cellspacing=0 cols=2 frame=box rules=all>

<TR VALIGN="top">
<TH width=50%>描述</TH>
<TH width=50%>语言要素</TH>
</TR>

<TR VALIGN="top">
<TD width=50%>返回在模式匹配中找到的最近的九条记录。</TD>
<TD width=50%><A HREF="jspromatches.htm">$1...$9 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个数的绝对值。</TD>
<TD width=50%><A HREF="jsmthabs.htm">abs 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个数的反余弦。</TD>
<TD width=50%><A HREF="jsmthacos.htm">acos 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>启用并返回一个 Automation 对象的引用。</TD>
<TD width=50%><A HREF="jsobjactivexobject.htm">ActiveXObject 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将两个数相加或连接两个字符串。</TD>
<TD width=50%><A HREF="jsopradd.htm">加法运算符（+）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>在对象的指定文本两端加上一个带 NAME 属性的 HTML 锚点。</TD>
<TD width=50%><A HREF="jsmthanchor.htm">anchor 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个包含传递给当前执行函数的每个参数的数组。</TD>
<TD width=50%><A HREF="jsproarguments.htm">arguments 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>提供对创建任何数据类型的数组的支持。</TD>
<TD width=50%><A HREF="jsobjarray.htm">Array 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个数的反正弦。</TD>
<TD width=50%><A HREF="jsmthasin.htm">asin 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将一个值赋给变量。</TD>
<TD width=50%><A HREF="jsoprassign.htm">赋值运算符（=）</A><U> </U></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个数的反正切。</TD>
<TD width=50%><A HREF="jsmthatan.htm">atan 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回从 X 轴到点 （y, x）的角度（以弧度为单位）。</TD>
<TD width=50%><A HREF="jsmthatan2.htm">atan2 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个指示枚举算子是否处于集合结束处的 Boolean 值。</TD>
<TD width=50%><A HREF="jsmthatend.htm">atEnd 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>在<B>String</B> 对象的文本两端加入 HTML 的&lt;BIG&gt;标识。</TD>
<TD width=50%><A HREF="jsmthbig.htm">big 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对两个表达式执行按位与操作。</TD>
<TD width=50%><A HREF="jsoprbitwiseand.htm">按位与运算符（&amp;）</A><U> </U></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将一个表达式的各位向左移。</TD>
<TD width=50%><A HREF="jsoprlshift.htm">按位左移运算符（&lt;&lt;）</A><U> </U></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对一个表达式执行按位取非（求非）操作。</TD>
<TD width=50%><A HREF="jsoprbitwisenot.htm">按位取非运算符（~）</A><U> </U></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对两个表达式指定按位或操作。</TD>
<TD width=50%><A HREF="jsoprbitwiseor.htm">按位或运算符（|）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将一个表达式的各位向右移，保持符号不变。</TD>
<TD width=50%><A HREF="jsoprrshift.htm">按位右移运算符（&gt;&gt;）</A><U> </U></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对两个表达式执行按位异或操作。</TD>
<TD width=50%><A HREF="jsoprxor.htm">按位异或运算符（^）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML 的 &lt;BLINK&gt; 标识添加到 <B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthblink.htm">blink 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML 的 &lt;B&gt; 标识添加到<B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthbold.htm">bold 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>创建一个新的 Boolean 值。</TD>
<TD width=50%><A HREF="jsobjboolean.htm">Boolean 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>终止当前循环，或者如果与一个<I>label</I> 语句关联，则终止相关联的语句。</TD>
<TD width=50%><A HREF="jsstmbreak.htm">break 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回调用当前函数的函数引用。</TD>
<TD width=50%><A HREF="jsprocaller.htm">caller 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>包含在 <B>try</B> 语句块中的代码发生错误时执行的语句。</TD>
<TD width=50%><A HREF="jsstmtrycatch.htm">catch 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>激活条件编译支持。</TD>
<TD width=50%><A HREF="jsstmccon.htm">@cc_on 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回大于或等于其数值参数的最小整数。</TD>
<TD width=50%><A HREF="jsmthceil.htm">ceil 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回位于指定索引位置的字符。</TD>
<TD width=50%><A HREF="jsmthcharat.htm">charAt 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回指定字符的 Unicode 编码。</TD>
<TD width=50%><A HREF="jsmthcharcodeat.htm">charCodeAt 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使两个表达式连续执行。</TD>
<TD width=50%><A HREF="jsoprcomma.htm">逗号运算符（,）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使单行注释部分被 JScript 语法分析器忽略。</TD>
<TD width=50%><A HREF="jsstmcomment.htm">// （单行注释语句）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使多行注释部分被 JScript 语法分析器忽略。</TD>
<TD width=50%><A HREF="jsstmcomment.htm">/*..*/ （多行注释语句）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个显示比较结果的 Boolean 值。</TD>
<TD width=50%><A HREF="jsgrpcomparison.htm">比较运算符</A><U> </U></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将一个正则表达式编译为内部格式。</TD>
<TD width=50%><A HREF="jsmthcompile.htm">compile 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>复合赋值运算符列表。</TD>
<TD width=50%><A HREF="jscompoundassignmentoperators.htm">复合赋值运算符</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个由两个数组合并组成的新数组。</TD>
<TD width=50%><A HREF="jsmthconcatarray.htm">concat 方法（Array）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个包含给定的两个字符串连接的<B>String</B> 对象。</TD>
<TD width=50%><A HREF="jsmthconcatstring.htm">concat 方法（String）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>允许使用新的 JScript 语言特性，但又不牺牲与不支持这些特性的浏览器的兼容性。</TD>
<TD width=50%><A HREF="jsconditionalcompilation.htm">条件编译</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>条件编译中使用的预定义变量列表。</TD>
<TD width=50%><A HREF="jsconditionalcompilationvars.htm">条件编译变量</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>根据条件执行两个表达式之一。</TD>
<TD width=50%><A HREF="jsoprconditional.htm">条件（三元）运算符（?:）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>指定创建对象的函数。</TD>
<TD width=50%><A HREF="jsoprconditional.htm">constructor 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>停止循环的当前迭代，并开始一次新的迭代。</TD>
<TD width=50%><A HREF="jsstmcontinue.htm">continue 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个数的余弦。</TD>
<TD width=50%><A HREF="jsmthcos.htm">cos 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>提供日期和时间的基本存储和检索。</TD>
<TD width=50%><A HREF="jsobjdate.htm">Date 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将变量减一。</TD>
<TD width=50%><A HREF="jsoprincdec.htm">递减运算符（--）</A><U> </U></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>删除对象的属性，或删除数组中的一个元素。</TD>
<TD width=50%><A HREF="jsoprdelete.htm">delete 运算符</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回或设置关于指定错误的描述字符串。</TD>
<TD width=50%><A HREF="jsprodescription.htm">description 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>存储数据键、项目对的对象。</TD>
<TD width=50%><A HREF="jsobjdictionary.htm">Dictionary 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 VBArray 的维数。</TD>
<TD width=50%><A HREF="jsmthdimensions.htm">dimensions 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将两个数相除并返回一个数值结果。</TD>
<TD width=50%><A HREF="jsoprdivide.htm">除法运算符（/）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>先执行一次语句块，然后重复执行该循环，直至条件表达式的值为 <B>false</B>。</TD>
<TD width=50%><A HREF="jsstmdowhile.htm">do...while 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 Euler 常数，即自然对数的底。</TD>
<TD width=50%><A HREF="jsproe.htm">E 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>提供集合中的项的枚举。</TD>
<TD width=50%><A HREF="jsobjenumerator.htm">Enumerator 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>比较两个表达式，看是否相等。</TD>
<TD width=50%><A HREF="jsgrpcomparison.htm">相等运算符（==）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>包含在运行 JScript 代码时发生错误信息的对象。</TD>
<TD width=50%><A HREF="jsobjerror.htm">Error 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对 <B>String</B> 对象编码，以便在所有计算机上都能阅读。</TD>
<TD width=50%><A HREF="jsmthescape.htm">escape 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对 JScript 代码求值然后执行。</TD>
<TD width=50%><A HREF="jsmtheval.htm">eval 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>在指定字符串中执行一个匹配查找。</TD>
<TD width=50%><A HREF="jsmthexec.htm">exec 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 <I>e</I> （自然对数的底） 的幂。</TD>
<TD width=50%><A HREF="jsmthexp.htm">exp 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>提供对计算机文件系统的访问。</TD>
<TD width=50%><A HREF="jsobjfilesystem.htm">FileSystemObject 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML 的&lt;TT&gt; 标识添加到<B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthfixed.htm">fixed 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回小于或等于其数值参数的最大整数。</TD>
<TD width=50%><A HREF="jsmthfloor.htm">floor 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML 带 COLOR 属性的 &lt;FONT&gt; 标识添加到 <B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthfontcolor.htm">fontcolor 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML 带 SIZE 属性的 &lt;FONT&gt; 标识添加到 <B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthfontsize.htm">fontsize 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>只要指定的条件为 <B>true</B>，就一直执行语句块。</TD>
<TD width=50%><A HREF="jsstmfor.htm">for 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对应于对象或数组中的每个元素执行一个或多个语句。</TD>
<TD width=50%><A HREF="jsstmforin.htm">for...in 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 Unicode 字符值的字符串。</TD>
<TD width=50%><A HREF="jsmthfromcharcode.htm">fromCharCode 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>创建一个新的函数。</TD>
<TD width=50%><A HREF="jsobjfunction.htm">Function 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>声明一个新的函数。</TD>
<TD width=50%><A HREF="jsstmfunction.htm">function 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间返回 <B>Date</B> 对象的月份日期值。</TD>
<TD width=50%><A HREF="jsmthgetdate.htm">getDate 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间返回 <B>Date</B> 对象的星期几。</TD>
<TD width=50%><A HREF="jsmthgetday.htm">getDay 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间返回 <B>Date</B> 对象的年份。</TD>
<TD width=50%><A HREF="jsmthgetfullyear.htm">getFullYear 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间返回 <B>Date</B> 对象的小时值。</TD>
<TD width=50%><A HREF="jsmthgethours.htm">getHours 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回指定位置的项。</TD>
<TD width=50%><A HREF="jsmthgetitem.htm">getItem 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间返回 <B>Date</B> 对象的毫秒值。</TD>
<TD width=50%><A HREF="jsmthgetmilliseconds.htm">getMilliseconds 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间返回 <B>Date</B> 对象的分钟值。</TD>
<TD width=50%><A HREF="jsmthgetmilliseconds.htm">getMinutes 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间返回 <B>Date</B> 对象的月份。</TD>
<TD width=50%><A HREF="jsmthgetmonth.htm">getMonth 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回文件中的 Automation 对象的引用。</TD>
<TD width=50%><A HREF="jsfctgetobject.htm">GetObject 函数</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间返回 <B>Date</B> 对象的秒数。</TD>
<TD width=50%><A HREF="jsmthgetseconds.htm">getSeconds 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 <B>Date</B> 对象中的时间值。</TD>
<TD width=50%><A HREF="jsmthgettime.htm">getTime 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回主机的时间和全球标准时间（UTC）之间的差（以分钟为单位）。</TD>
<TD width=50%><A HREF="jsmthgettimezone.htm">getTimezoneOffset 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）返回 <B>Date</B> 对象的日期值。</TD>
<TD width=50%><A HREF="jsmthgetutcdate.htm">getUTCDate 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）返回 <B>Date</B> 对象的星期几的值。</TD>
<TD width=50%><A HREF="jsmthgetutcdate.htm">getUTCDay 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）返回 <B>Date</B> 对象的年份。</TD>
<TD width=50%><A HREF="jsmthgetutcfullyear.htm">getUTCFullYear 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）返回<B>Date</B> 对象的小时数。</TD>
<TD width=50%><A HREF="jsmthgetutchours.htm">getUTCHours 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）返回<B>Date</B> 对象的毫秒数。</TD>
<TD width=50%><A HREF="jsmthgetutcmilliseconds.htm">getUTCMilliseconds 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）返回 <B>Date</B> 对象的分钟数。</TD>
<TD width=50%><A HREF="jsmthgetutcminutes.htm">getUTCMinutes 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）返回 <B>Date</B> 对象的月份值。</TD>
<TD width=50%><A HREF="jsmthgetutcmonth.htm">getUTCMonth 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间 （UTC） 返回 <B>Date</B> 对象的秒数。</TD>
<TD width=50%><A HREF="jsmthgetutcseconds.htm">getUTCSeconds 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 <B>Date</B> 对象中的 VT_DATE。</TD>
<TD width=50%><A HREF="jsmthgetvardate.htm">getVarDate 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 <B>Date</B> 对象中的年份。</TD>
<TD width=50%><A HREF="jsmthgetyear.htm">getYear 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>是一个固有对象，目的是将全局方法集中在一个对象中。</TD>
<TD width=50%><A HREF="jsobjglobal.htm">Global 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>比较两个表达式，看一个是否大于另一个。</TD>
<TD width=50%><A HREF="jsgrpcomparison.htm">大于运算符（&gt;）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>比较两个表达式，看一个是否大于等于另一个。</TD>
<TD width=50%><A HREF="jsgrpcomparison.htm">大于等于运算符（&gt;=）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>比较两个表达式，看是否值相等并具有相同的数据类型。</TD>
<TD width=50%><A HREF="jsgrpcomparison.htm">严格相等运算符（===）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>根据表达式的值，有条件地执行一组语句。</TD>
<TD width=50%><A HREF="jsstmconditionalif.htm">@if 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>根据表达式的值，有条件地执行一组语句。</TD>
<TD width=50%><A HREF="jsstmif.htm">if...else 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>给变量加一。</TD>
<TD width=50%><A HREF="jsstmif.htm">递增运算符（++）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回在字符串中找到的第一个成功匹配的字符位置。</TD>
<TD width=50%><A HREF="jsproindex.htm">index 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回在 <B>String</B> 对象中第一次出现子字符串的字符位置。</TD>
<TD width=50%><A HREF="jsmthindexof.htm">indexOf 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>比较两个表达式，看是否不相等。</TD>
<TD width=50%><A HREF="jsgrpcomparison.htm">不等运算符（!=）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 <B>Number.POSITIVE_INFINITY</B> 的初始值。</TD>
<TD width=50%><A HREF="jsproinfinity.htm">Infinity 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回进行查找的字符串。</TD>
<TD width=50%><A HREF="jsproinput.htm">input 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个 Boolean 值，表明某个对象是否为特定类的一个实例。</TD>
<TD width=50%><A HREF="jsoprinstanceof.htm">instanceof 运算符</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个 Boolean 值，表明某个给定的数是否是有穷的。</TD>
<TD width=50%><A HREF="jsmthisfinite.htm">isFinite 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个 Boolean 值，表明某个值是否为保留值 <B>NaN</B>（不是一个数）。</TD>
<TD width=50%><A HREF="jsmthisnan.htm">isNaN 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML的 &lt;I&gt; 标识添加到 <B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthitalics.htm">italics 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回集合中的当前项。</TD>
<TD width=50%><A HREF="jsmthitem.htm">item 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个由数组中的所有元素连接在一起的 <B>String</B> 对象。</TD>
<TD width=50%><A HREF="jsmthjoin.htm">join 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>给语句提供一个标识符。</TD>
<TD width=50%><A HREF="jsstmlabeled.htm">Labeled 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回在字符串中找到的最后一个成功匹配的字符位置。</TD>
<TD width=50%><A HREF="jsprolastindex.htm">lastIndex 属性</A><U> </U></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回在 <B>String</B> 对象中最后出现子字符串的位置。</TD>
<TD width=50%><A HREF="jsmthlastindexof.htm">lastIndexOf 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回在 VBArray 中指定维数所用的最小索引值。</TD>
<TD width=50%><A HREF="jsmthlbound.htm">lbound 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回比数组中所定义的最高元素大 1 的整数值 。</TD>
<TD width=50%><A HREF="jsprolengtharray.htm">length 属性（Array）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回为函数所定义的参数个数。</TD>
<TD width=50%><A HREF="jsprolengthfunction.htm">length 属性（Function）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 <B>String</B> 对象的长度。</TD>
<TD width=50%><A HREF="jsprolengthstring.htm">length 属性（String）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>比较两个表达式，看是否一个小于另一个。</TD>
<TD width=50%><A HREF="jsgrpcomparison.htm">小于运算符（&lt;）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>比较两个表达式，看是否一个小于等于另一个。</TD>
<TD width=50%><A HREF="jsgrpcomparison.htm">小于等于运算符（&lt;=）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将带 HREF 属性的 HTML 锚点添加到 <B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthlink.htm">link 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 2 的自然对数。</TD>
<TD width=50%><A HREF="jsproln2.htm">LN2 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 10 的自然对数。</TD>
<TD width=50%><A HREF="jsproln10.htm">LN10 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回某个数的自然对数。</TD>
<TD width=50%><A HREF="jsmthlog.htm">log 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回以 2 为底的 <I>e</I>（即 Euler 常数）的对数。</TD>
<TD width=50%><A HREF="jsprolog2e.htm">LOG2E 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回以 10 为底的e（即 Euler 常数）的对数。</TD>
<TD width=50%><A HREF="jsprolog10e.htm">LOG10E 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对两个表达式执行逻辑与操作。</TD>
<TD width=50%><A HREF="jsoprand.htm">逻辑与运算符（&amp;&amp;）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对表达式执行逻辑非操作。</TD>
<TD width=50%><A HREF="jsoprnot.htm">逻辑非运算符（!）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对两个表达式执行逻辑或操作。</TD>
<TD width=50%><A HREF="jsopror.htm">逻辑或运算符（||）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用给定的<B>正则表达式</B>对象对字符串进行查找，并将结果作为数组返回。</TD>
<TD width=50%><A HREF="jsmthmatch.htm">match 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>一个固有对象，提供基本的数学函数和常数。</TD>
<TD width=50%><A HREF="jsobjmath.htm">Math 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回给定的两个表达式中的较大者。</TD>
<TD width=50%><A HREF="jsmthmax.htm">max 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回在 JScript中能表示的最大值。</TD>
<TD width=50%><A HREF="jspromaxvalue.htm">MAX_VALUE 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回给定的两个数中的较小者。</TD>
<TD width=50%><A HREF="jsmthmin.htm">min 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回在 JScript中能表示的最接近零的值。</TD>
<TD width=50%><A HREF="jsprominvalue.htm">MIN_VALUE 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将两个数相除，并返回余数。</TD>
<TD width=50%><A HREF="jsoprmod.htm">取模运算符（%）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将集合中的当前项设置为第一项。</TD>
<TD width=50%><A HREF="jsmthmovefirst.htm">moveFirst 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将当前项设置为集合中的下一项。</TD>
<TD width=50%><A HREF="jsmthmovenext.htm">moveNext 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将两个数相乘。</TD>
<TD width=50%><A HREF="jsoprmultiply.htm">乘法运算符（*）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回特殊值 <B>NaN</B>，表示某个表达式不是一个数。</TD>
<TD width=50%><A HREF="jspronanglobal.htm">NaN 属性（Global）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回特殊值 （<B>NaN</B>），表示某个表达式不是一个数。</TD>
<TD width=50%><A HREF="jspronannumber.htm">NaN 属性（Number）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回比在 JScript 中能表示的最大的负数 （-<B>Number.MAX_VALUE</B>）更小的值。</TD>
<TD width=50%><A HREF="jspronegativeinf.htm">NEGATIVE_INFINITY 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>创建一个新对象。</TD>
<TD width=50%><A HREF="jsoprnew.htm">new 运算符</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>比较两个表达式，看是否具有不相等的值或数据类型不同。</TD>
<TD width=50%><A HREF="jsgrpcomparison.htm">非严格相等运算符（!==）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>表示数值数据类型和提供数值常数的对象。</TD>
<TD width=50%><A HREF="jsobjnumber.htm">Number 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回或设置与特定错误关联的数值。</TD>
<TD width=50%><A HREF="jspronumber.htm">number 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>提供所有的 JScript 对象的公共功能。</TD>
<TD width=50%><A HREF="jsobjnumber.htm">Object 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>包含 JScript 运算符的执行优先级信息的列表。</TD>
<TD width=50%><A HREF="jsoperatorprecedence.htm">运算符优先级</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对包含日期的字符串进行分析，并返回该日期与1970年1月1日零点之间相差的毫秒数。</TD>
<TD width=50%><A HREF="jsmthparse.htm">parse 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回从字符串转换而来的浮点数。</TD>
<TD width=50%><A HREF="jsmthparsefloat.htm">parseFloat 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回从字符串转换而来的整数。</TD>
<TD width=50%><A HREF="jsmthparseint.htm">parseInt 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回圆周与其直径的比值，约等于3.141592653589793。</TD>
<TD width=50%><A HREF="jspropi.htm">PI 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回比在 JScript 中能表示的最大的数 （<B>Number.MAX_VALUE</B>）更大的值。</TD>
<TD width=50%><A HREF="jspropositiveinf.htm">POSITIVE_INFINITY 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个指定幂次的底表达式的值。</TD>
<TD width=50%><A HREF="jsmthpow.htm">pow 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回对象类的原型引用。</TD>
<TD width=50%><A HREF="jsproprototype.htm">prototype 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个 0 和 1 之间的伪随机数。</TD>
<TD width=50%><A HREF="jsmthrandom.htm">random 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>存储有关正则表达式模式查找的信息。</TD>
<TD width=50%><A HREF="jsobjregexp.htm">RegExp 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>包含一个正则表达式模式。</TD>
<TD width=50%><A HREF="jsobjregexpression.htm">正则表达式对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>在写正则表达式模式时可以使用的特殊字符和序列的列表。</TD>
<TD width=50%><A HREF="jsgrpregexpsyntax.htm">正则表达式语法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回根据正则表达式进行文字替换后的字符串的拷贝。</TD>
<TD width=50%><A HREF="jsmthreplace.htm">replace 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>从当前函数退出并从该函数返回一个值。</TD>
<TD width=50%><A HREF="jsstmreturn.htm">return 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个元素反序的 <B>Array</B> 对象。</TD>
<TD width=50%><A HREF="jsmthreverse.htm">reverse 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将一个指定的数值表达式舍入到最近的整数值。</TD>
<TD width=50%><A HREF="jsmthround.htm">round 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>JScript运行时错误列表。</TD>
<TD width=50%><A HREF="jsmscruntimeerrors.htm">运行时错误</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个代表所使用的脚本语言的字符串。</TD>
<TD width=50%><A HREF="jsfctscriptengine.htm">ScriptEngine 函数</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回所使用的脚本引擎的编译版本号。</TD>
<TD width=50%><A HREF="jsfctscriptengine.htm">ScriptEngineBuildVersion 函数</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回所使用的脚本引擎的主版本号。</TD>
<TD width=50%><A HREF="jsfctscriptenginemajorversion.htm">ScriptEngineMajorVersion 函数</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回所使用的脚本引擎的次版本号。</TD>
<TD width=50%><A HREF="jsfctscriptengineminorversion.htm">ScriptEngineMinorVersion 函数</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回与正则表达式查找内容匹配的第一个子字符串的位置。</TD>
<TD width=50%><A HREF="jsmthsearch.htm">search 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>创建用于条件编译语句的变量。</TD>
<TD width=50%><A HREF="jsstmset.htm">@set 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间设置 <B>Date</B> 对象的数值日期。</TD>
<TD width=50%><A HREF="jsmthsetdate.htm">setDate 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间设置 <B>Date</B> 对象的年份。</TD>
<TD width=50%><A HREF="jsmthsetfullyear.htm">setFullYear 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间设置 <B>Date</B>对象的小时值。</TD>
<TD width=50%><A HREF="jsmthsethours.htm">setHours 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间设置 <B>Date</B> 对象的毫秒值。</TD>
<TD width=50%><A HREF="jsmthsetmilliseconds.htm">setMilliseconds 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间设置 <B>Date</B> 对象的分钟值。</TD>
<TD width=50%><A HREF="jsmthsetminutes.htm">setMinutes 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间设置 <B>Date</B> 对象的月份。</TD>
<TD width=50%><A HREF="jsmthsetmonth.htm">setMonth 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用当地时间设置 <B>Date</B> 对象的秒值。</TD>
<TD width=50%><A HREF="jsmthsetseconds.htm">setSeconds 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>设置 <B>Date</B> 对象的日期和时间。</TD>
<TD width=50%><A HREF="jsmthsettime.htm">setTime 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）设置 <B>Date</B>对象的数值日期。</TD>
<TD width=50%><A HREF="jsmthsetutcdate.htm">setUTCDate 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）设置 <B>Date</B> 对象的年份。</TD>
<TD width=50%><A HREF="jsmthsetutcfullyear.htm">setUTCFullYear 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）设置 <B>Date</B> 对象的小时值。</TD>
<TD width=50%><A HREF="jsmthsetutchours.htm">setUTCHours 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）设置 <B>Date</B> 对象的毫秒值。</TD>
<TD width=50%><A HREF="jsmthsetutcmilliseconds.htm">setUTCMilliseconds 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）设置 <B>Date</B> 对象的分钟值。</TD>
<TD width=50%><A HREF="jsmthsetutcminutes.htm">setUTCMinutes 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）设置 <B>Date</B> 对象的月份。</TD>
<TD width=50%><A HREF="jsmthsetutcmonth.htm">setUTCMonth 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用全球标准时间（UTC）设置 <B>Date</B> 对象的秒值。</TD>
<TD width=50%><A HREF="jsmthsetutcseconds.htm">setUTCSeconds 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>使用 <B>Date</B> 对象的年份。</TD>
<TD width=50%><A HREF="jsmthsetyear.htm">setYear 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个数的正弦。</TD>
<TD width=50%><A HREF="jsmthsin.htm">sin 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回数组的一个片段。</TD>
<TD width=50%><A HREF="jsmthslicearray.htm">slice 方法（Array）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回字符串的一个片段。</TD>
<TD width=50%><A HREF="jsmthslicestring.htm">slice 方法（String）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML 的&lt;SMALL&gt; 标识添加到 <B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthsmall.htm">small 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个元素被排序了的 <B>Array</B> 对象。</TD>
<TD width=50%><A HREF="jsmthsort.htm">sort 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回正则表达式模式的文本的复制。</TD>
<TD width=50%><A HREF="jsprosource.htm">source 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将一个字符串分割为子字符串，然后将结果作为字符串数组返回。</TD>
<TD width=50%><A HREF="jsmthsplit.htm">split 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个数的平方根。</TD>
<TD width=50%><A HREF="jsmthsqrt.htm">sqrt 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 0.5 的平方根，即 1 除以 2 的平方根。</TD>
<TD width=50%><A HREF="jsprosqrt1_2.htm">SQRT1_2 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 2 的平方根。</TD>
<TD width=50%><A HREF="jsprosqrt2.htm">SQRT2 属性</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML 的&lt;STRIKE&gt; 标识添加到 <B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthstrike.htm">strike 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>提供对文本字符串的操作和格式处理，判定在字符串中是否存在某个子字符串并确定其位置。</TD>
<TD width=50%><A HREF="jsobjstring.htm">String 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML 的 &lt;SUB&gt; 标识放置到 <B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthsub.htm">sub 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个从指定位置开始并具有指定长度的子字符串。</TD>
<TD width=50%><A HREF="jsmthsubstr.htm">substr 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回位于 <B>String</B> 对象中指定位置的子字符串。</TD>
<TD width=50%><A HREF="jsmthsubstring.htm">substring 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对两个表达式执行减法操作。</TD>
<TD width=50%><A HREF="jsoprsubtract.htm">减法运算符（-）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>将 HTML 的 &lt;SUP&gt; 标识放置到 <B>String</B> 对象中的文本两端。</TD>
<TD width=50%><A HREF="jsmthsup.htm">sup 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>当指定的表达式的值与某个标签匹配时，即执行相应的一个或多个语句。</TD>
<TD width=50%><A HREF="jsstmswitch.htm">switch 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>JScript运行时错误列表。</TD>
<TD width=50%><A HREF="jsmscsyntaxerrors.htm">语法错误</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个数的正切。</TD>
<TD width=50%><A HREF="jsmthtan.htm">tan 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个 Boolean 值，表明在被查找的字符串中是否存在某个模式。</TD>
<TD width=50%><A HREF="jsmthtest.htm">test 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对当前对象的引用。</TD>
<TD width=50%><A HREF="jsstmthis.htm">this 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>产生一个可由 <B>try...catch</B> 语句处理的错误条件。</TD>
<TD width=50%><A HREF="jsstmthrow.htm">throw 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个从 VBArray 转换而来的标准 JScript 数组。</TD>
<TD width=50%><A HREF="jsmthtoarray.htm">toArray 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个转换为使用格林威治标准时间（GMT）的日期。</TD>
<TD width=50%><A HREF="jsmthtogmtstring.htm">toGMTString 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个转换为使用当地时间的日期。</TD>
<TD width=50%><A HREF="jsmthtolocalestring.htm">toLocaleString 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个字符串，该字符串中所有字母被转换为小写字母。</TD>
<TD width=50%><A HREF="jsmthtolowercase.htm">toLowerCase 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个对象的字符串表示。</TD>
<TD width=50%><A HREF="jsmthtostring.htm">toString 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个字符串，该字符串中所有字母都被转换为大写字母。</TD>
<TD width=50%><A HREF="jsmthtouppercase.htm">toUpperCase 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个转换为使用全球标准时间（UTC）的日期。</TD>
<TD width=50%><A HREF="jsmthtoutcstring.htm">toUTCString 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>实现 JScript 的错误处理。</TD>
<TD width=50%><A HREF="jsstmtrycatch.htm">try 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回一个表示表达式的数据类型的字符串。</TD>
<TD width=50%><A HREF="jsoprtypeof.htm">typeof 运算符</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回在 VBArray 的指定维中所使用的最大索引值。</TD>
<TD width=50%><A HREF="jsmthubound.htm">ubound 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>表示一个数值表达式的相反数。</TD>
<TD width=50%><A HREF="jsoprsubtract.htm">一元取相反数运算符（-）</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>对用<B>escape</B> 方法编码的 <B>String</B> 对象进行解码。</TD>
<TD width=50%><A HREF="jsmthunescape.htm">unescape 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>在表达式中对各位进行无符号右移。</TD>
<TD width=50%><A HREF="jsoprurshift.htm">无符号右移运算符（&gt;&gt;&gt;）</A><U> </U></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回 1970年1月1日零点的全球标准时间 （UTC） （或 GMT）与指定日期之间的毫秒数。</TD>
<TD width=50%><A HREF="jsmthutc.htm">UTC 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>返回指定对象的原始值。</TD>
<TD width=50%><A HREF="jsmthvalueof.htm">valueOf 方法</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>声明一个变量。</TD>
<TD width=50%><A HREF="jsstmvar.htm">var 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>提供对 Visual Basic 安全数组的访问。</TD>
<TD width=50%><A HREF="jsobjvbarray.htm">VBArray 对象</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>避免一个表达式返回值。</TD>
<TD width=50%><A HREF="jsoprvoid.htm">void 运算符</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>执行语句直至给定的条件为 <B>false</B>。</TD>
<TD width=50%><A HREF="jsstmwhile.htm">while 语句</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>确定一个语句的默认对象。</TD>
<TD width=50%><A HREF="jsstmwith.htm">with 语句</A></TD>
</TR>
</TABLE><BR>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
