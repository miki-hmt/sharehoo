/**
 * @license
 * Copyright (C) 2006 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview
 * some functions for browser-side pretty printing of code contained in html.
 *
 * <p>
 * For a fairly comprehensive set of languages see the
 * <a href="https://github.com/google/code-prettify#for-which-languages-does-it-work">README</a>
 * file that came with this source.  At a minimum, the lexer should work on a
 * number of languages including C and friends, Java, Python, Bash, SQL, HTML,
 * XML, CSS, Javascript, and Makefiles.  It works passably on Ruby, PHP and Awk
 * and a subset of Perl, but, because of commenting conventions, doesn't work on
 * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class.
 * <p>
 * Usage: <ol>
 * <li> include this source file in an html page via
 *   {@code <script type="text/javascript" src="/path/to/prettify.js"></script>}
 * <li> define style rules.  See the example page for examples.
 * <li> mark the {@code <pre>} and {@code <code>} tags in your source with
 *    {@code class=prettyprint.}
 *    You can also use the (html deprecated) {@code <xmp>} tag, but the pretty
 *    printer needs to do more substantial DOM manipulations to support that, so
 *    some css styles may not be preserved.
 * </ol>
 * That's it.  I wanted to keep the API as simple as possible, so there's no
 * need to specify which language the code is in, but if you wish, you can add
 * another class to the {@code <pre>} or {@code <code>} element to specify the
 * language, as in {@code <pre class="prettyprint lang-java">}.  Any class that
 * starts with "lang-" followed by a file extension, specifies the file type.
 * See the "lang-*.js" files in this directory for code that implements
 * per-language file handlers.
 * <p>
 * Change log:<br>
 * cbeust, 2006/08/22
 * <blockquote>
 *   Java annotations (start with "@") are now captured as literals ("lit")
 * </blockquote>
 * @requires console
 *//*

 Copyright (C) 2006 Google Inc.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
var DecorationsT,JobT,SourceSpansT,IN_GLOBAL_SCOPE=!1,PR;window.PR_SHOULD_USE_CONTINUATION=!0;var prettyPrintOne,prettyPrint;(function(){function U(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=V[c])?a:"0"<=c&&"7">=c?parseInt(e.substring(1),8):"u"===c||"x"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function g(e){if(32>e)return(16>e?"\\x0":"\\x")+e.toString(16);e=String.fromCharCode(e);return"\\"===e||"-"===e||"]"===e||"^"===e?"\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp("\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]","g"));e=[];var a="^"===c[0],b=["["];a&&b.push("^");for(var a=a?1:0,f=c.length;a<f;++a){var h=c[a];if(/\\[bdsw]/i.test(h))b.push(h);else{var h=d(h),k;a+2<f&&"-"===c[a+1]?(k=d(c[a+2]),a+=2):k=h;e.push([h,k]);65>k||122<h||(65>k||90<h||e.push([Math.max(65,h)|32,Math.min(k,90)|32]),97>k||122<h||e.push([Math.max(97,h)&-33,Math.min(k,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];f=[];for(a=0;a<e.length;++a)h=e[a],h[0]<=f[1]+1?f[1]=Math.max(f[1],h[1]):c.push(f=h);for(a=0;a<c.length;++a)h=c[a],b.push(g(h[0])),h[1]>h[0]&&(h[1]+1>h[0]&&b.push("-"),b.push(g(h[1])));b.push("]");return b.join("")}function r(e){for(var a=e.source.match(RegExp("(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!\x3d]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)","g")),b=a.length,d=[],f=0,h=0;f<b;++f){var k=a[f];"("===k?++h:"\\"===k.charAt(0)&&(k=+k.substring(1))&&(k<=h?d[k]=-1:a[f]=g(k))}for(f=1;f<d.length;++f)-1===d[f]&&(d[f]=++z);for(h=f=0;f<b;++f)k=a[f],"("===k?(++h,d[h]||(a[f]="(?:")):"\\"===k.charAt(0)&&(k=+k.substring(1))&&k<=h&&(a[f]="\\"+d[k]);for(f=0;f<b;++f)"^"===a[f]&&"^"!==a[f+1]&&(a[f]="");if(e.ignoreCase&&l)for(f=0;f<b;++f)k=a[f],e=k.charAt(0),2<=k.length&&"["===e?a[f]=c(k):"\\"!==e&&(a[f]=k.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);return"["+String.fromCharCode(a&-33,a|32)+"]"}));return a.join("")}for(var z=0,l=!1,m=!1,n=0,b=a.length;n<b;++n){var p=a[n];if(p.ignoreCase)m=!0;else if(/[a-z]/i.test(p.source.replace(/\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi,""))){l=!0;m=!1;break}}for(var V={b:8,t:9,n:10,v:11,f:12,r:13},t=[],n=0,b=a.length;n<b;++n){p=a[n];if(p.global||p.multiline)throw Error(""+p);t.push("(?:"+r(p)+")")}return new RegExp(t.join("|"),m?"gi":"g")}function W(a,d){function g(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=a.firstChild;b;b=b.nextSibling)g(b);b=a.nodeName.toLowerCase();if("br"===b||"li"===b)r[m]="\n",l[m<<1]=z++,l[m++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\r\n?/g,"\n"):b.replace(/[ \t\r\n]+/g," "),r[m]=b,l[m<<1]=z,z+=b.length,l[m++<<1|1]=a)}var c=/(?:^|\s)nocode(?:\s|$)/,r=[],z=0,l=[],m=0;g(a);return{sourceCode:r.join("").replace(/\n$/,""),spans:l}}function I(a,d,g,c,r){g&&(a={sourceNode:a,pre:1,langExtension:null,numberLines:null,sourceCode:g,spans:null,basePos:d,decorations:null},c(a),r.push.apply(r,a.decorations))}function X(a){for(var d=void 0,g=a.firstChild;g;g=g.nextSibling)var c=g.nodeType,d=1===c?d?a:g:3===c?Y.test(g.nodeValue)?a:d:d;return d===a?void 0:d}function F(a,d){var g={},c;(function(){for(var l=a.concat(d),m=[],n={},b=0,p=l.length;b<p;++b){var r=l[b],t=r[3];if(t)for(var e=t.length;0<=--e;)g[t.charAt(e)]=r;r=r[1];t=""+r;n.hasOwnProperty(t)||(m.push(r),n[t]=null)}m.push(/[\0-\uffff]/);c=U(m)})();var r=d.length,z=function(a){for(var m=a.basePos,n=a.sourceNode,b=[m,"pln"],p=0,l=a.sourceCode.match(c)||[],t={},e=0,q=l.length;e<q;++e){var y=l[e],v=t[y],f=void 0,h;if("string"===typeof v)h=!1;else{var k=g[y.charAt(0)];if(k)f=y.match(k[1]),v=k[0];else{for(h=0;h<r;++h)if(k=d[h],f=y.match(k[1])){v=k[0];break}f||(v="pln")}!(h=5<=v.length&&"lang-"===v.substring(0,5))||f&&"string"===typeof f[1]||(h=!1,v="src");h||(t[y]=v)}k=p;p+=y.length;if(h){h=f[1];var A=y.indexOf(h),C=A+h.length;f[2]&&(C=y.length-f[2].length,A=C-h.length);v=v.substring(5);I(n,m+k,y.substring(0,A),z,b);I(n,m+k+A,h,J(v,h),b);I(n,m+k+C,y.substring(C),z,b)}else b.push(m+k,v)}a.decorations=b};return z}function w(a){var d=[],g=[];a.tripleQuotedStrings?d.push(["str",/^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,null,"'\""]):a.multiLineStrings?d.push(["str",/^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,null,"'\"`"]):d.push(["str",/^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,null,"\"'"]);a.verbatimStrings&&g.push(["str",/^@\"(?:[^\"]|\"\")*(?:\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push(["com",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,"#"]):d.push(["com",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\r\n]*)/,null,"#"]),g.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,null])):d.push(["com",/^#[^\r\n]*/,null,"#"]));a.cStyleComments&&(g.push(["com",/^\/\/[^\r\n]*/,null]),g.push(["com",/^\/\*[\s\S]*?(?:\*\/|$)/,null]));if(c=a.regexLiterals){var r=(c=1<c?"":"\n\r")?".":"[\\S\\s]";g.push(["lang-regex",RegExp("^(?:^^\\.?|[+-]|[!\x3d]\x3d?\x3d?|\\#|%\x3d?|\x26\x26?\x3d?|\\(|\\*\x3d?|[+\\-]\x3d|-\x3e|\\/\x3d?|::?|\x3c\x3c?\x3d?|\x3e\x3e?\x3e?\x3d?|,|;|\\?|@|\\[|~|{|\\^\\^?\x3d?|\\|\\|?\x3d?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*("+("/(?\x3d[^/*"+c+"])(?:[^/\\x5B\\x5C"+c+"]|\\x5C"+r+"|\\x5B(?:[^\\x5C\\x5D"+c+"]|\\x5C"+r+")*(?:\\x5D|$))+/")+")")])}(c=a.types)&&g.push(["typ",c]);c=(""+a.keywords).replace(/^ | $/g,"");c.length&&g.push(["kwd",new RegExp("^(?:"+c.replace(/[\s,]+/g,"|")+")\\b"),null]);d.push(["pln",/^\s+/,null," \r\n\t\u00a0"]);c="^.[^\\s\\w.$@'\"`/\\\\]*";a.regexLiterals&&(c+="(?!s*/)");g.push(["lit",/^@[a-z_$][a-z_$@0-9]*/i,null],["typ",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/,null],["pln",/^[a-z_$][a-z_$@0-9]*/i,null],["lit",/^(?:0x[a-f0-9]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+\-]?\d+)?)[a-z]*/i,null,"0123456789"],["pln",/^\\[\s\S]?/,null],["pun",new RegExp(c),null]);return F(d,g)}function K(a,d,g){function c(a){var b=a.nodeType;if(1==b&&!z.test(a.className))if("br"===a.nodeName)r(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&g){var e=a.nodeValue,d=e.match(l);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+d[0].length))&&a.parentNode.insertBefore(m.createTextNode(e),a.nextSibling),r(a),b||a.parentNode.removeChild(a))}}function r(a){function c(a,b){var e=b?a.cloneNode(!1):a,k=a.parentNode;if(k){var k=c(k,1),d=a.nextSibling;k.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,k.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var z=/(?:^|\s)nocode(?:\s|$)/,l=/\r\n?|\n/,m=a.ownerDocument,n=m.createElement("li");a.firstChild;)n.appendChild(a.firstChild);for(var b=[n],p=0;p<b.length;++p)c(b[p]);d===(d|0)&&b[0].setAttribute("value",d);var q=m.createElement("ol");q.className="linenums";d=Math.max(0,d-1|0)||0;for(var p=0,t=b.length;p<t;++p)n=b[p],n.className="L"+(p+d)%10,n.firstChild||n.appendChild(m.createTextNode("\u00a0")),q.appendChild(n);a.appendChild(q)}function q(a,d){for(var g=d.length;0<=--g;){var c=d[g];H.hasOwnProperty(c)?E.console&&console.warn("cannot override language handler %s",c):H[c]=a}}function J(a,d){a&&H.hasOwnProperty(a)||(a=/^\s*</.test(d)?"default-markup":"default-code");return H[a]}function L(a){var d=a.langExtension;try{var g=W(a.sourceNode,a.pre),c=g.sourceCode;a.sourceCode=c;a.spans=g.spans;a.basePos=0;J(d,c)(a);var r=/\bMSIE\s(\d+)/.exec(navigator.userAgent),r=r&&8>=+r[1],d=/\n/g,q=a.sourceCode,l=q.length,g=0,m=a.spans,n=m.length,c=0,b=a.decorations,p=b.length,w=0;b[p]=l;var t,e;for(e=t=0;e<p;)b[e]!==b[e+2]?(b[t++]=b[e++],b[t++]=b[e++]):e+=2;p=t;for(e=t=0;e<p;){for(var D=b[e],y=b[e+1],v=e+2;v+2<=p&&b[v+1]===y;)v+=2;b[t++]=D;b[t++]=y;e=v}b.length=t;var f=a.sourceNode;a="";f&&(a=f.style.display,f.style.display="none");try{for(;c<n;){var h=m[c+2]||l,k=b[w+2]||l,v=Math.min(h,k),A=m[c+1],C;if(1!==A.nodeType&&(C=q.substring(g,v))){r&&(C=C.replace(d,"\r"));A.nodeValue=C;var M=A.ownerDocument,u=M.createElement("span");u.className=b[w+1];var B=A.parentNode;B.replaceChild(u,A);u.appendChild(A);g<h&&(m[c+1]=A=M.createTextNode(q.substring(v,h)),B.insertBefore(A,u.nextSibling))}g=v;g>=h&&(c+=2);g>=k&&(w+=2)}}finally{f&&(f.style.display=a)}}catch(x){E.console&&console.log(x&&x.stack||x)}}function N(a,d,g){g=g||!1;d=d||null;var c=document.createElement("div");c.innerHTML="\x3cpre\x3e"+a+"\x3c/pre\x3e";c=c.firstChild;g&&K(c,g,!0);L({langExtension:d,numberLines:g,sourceNode:c,pre:1,sourceCode:null,basePos:null,spans:null,decorations:null});return c.innerHTML}function O(a,d){function g(){for(var c=E.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;p<q.length&&b.now()<c;p++){for(var d=q[p],m=f,n=d;n=n.previousSibling;){var l=n.nodeType,u=(7===l||8===l)&&n.nodeValue;if(u?!/^\??prettify\b/.test(u):3!==l||/\S/.test(n.nodeValue))break;if(u){m={};u.replace(/\b(\w+)=([\w:.%+-]+)/g,function(a,b,c){m[b]=c});break}}n=d.className;if((m!==f||t.test(n))&&!e.test(n)){l=!1;for(u=d.parentNode;u;u=u.parentNode)if(v.test(u.tagName)&&u.className&&t.test(u.className)){l=!0;break}if(!l){d.className+=" prettyprinted";l=m.lang;if(!l){var l=n.match(w),z;!l&&(z=X(d))&&y.test(z.tagName)&&(l=z.className.match(w));l&&(l=l[1])}if(B.test(d.tagName))u=1;else var u=d.currentStyle,x=r.defaultView,u=(u=u?u.whiteSpace:x&&x.getComputedStyle?x.getComputedStyle(d,null).getPropertyValue("white-space"):0)&&"pre"===u.substring(0,3);x=m.linenums;(x="true"===x||+x)||(x=(x=n.match(/\blinenums\b(?::(\d+))?/))?x[1]&&x[1].length?+x[1]:!0:!1);x&&K(d,x,u);L({langExtension:l,sourceNode:d,numberLines:x,pre:u,sourceCode:null,basePos:null,spans:null,decorations:null})}}}p<q.length?E.setTimeout(g,250):"function"===typeof a&&a()}for(var c=d||document.body,r=c.ownerDocument||document,c=[c.getElementsByTagName("pre"),c.getElementsByTagName("code"),c.getElementsByTagName("xmp")],q=[],l=0;l<c.length;++l)for(var m=0,n=c[l].length;m<n;++m)q.push(c[l][m]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var p=0,w=/\blang(?:uage)?-([\w.]+)(?!\S)/,t=/\bprettyprint\b/,e=/\bprettyprinted\b/,B=/pre|xmp/i,y=/^code$/i,v=/^(?:pre|code|xmp)$/i,f={};g()}var E=window,D=["break,continue,do,else,for,if,return,while"],B=[[D,"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],G=[B,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],P=[B,"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient"],Q=[B,"abstract,as,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,group,implicit,in,interface,internal,into,is,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"],B=[B,"abstract,async,await,constructor,debugger,enum,eval,export,function,get,implements,instanceof,interface,let,null,set,undefined,var,with,yield,Infinity,NaN"],R=[D,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],S=[D,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],D=[D,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],T=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,Y=/\S/,Z=w({keywords:[G,Q,P,B,"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",R,S,D],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),H={};q(Z,["default-code"]);q(F([],[["pln",/^[^<?]+/],["dec",/^<!\w[^>]*(?:>|$)/],["com",/^<\!--[\s\S]*?(?:-\->|$)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),"default-markup htm html mxml xhtml xml xsl".split(" "));q(F([["pln",/^[\s]+/,null," \t\r\n"],["atv",/^(?:\"[^\"]*\"?|\'[^\']*\'?)/,null,"\"'"]],[["tag",/^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],["atn",/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],["pun",/^[=<>\/]+/],["lang-js",/^on\w+\s*=\s*\"([^\"]+)\"/i],["lang-js",/^on\w+\s*=\s*\'([^\']+)\'/i],["lang-js",/^on\w+\s*=\s*([^\"\'>\s]+)/i],["lang-css",/^style\s*=\s*\"([^\"]+)\"/i],["lang-css",/^style\s*=\s*\'([^\']+)\'/i],["lang-css",/^style\s*=\s*([^\"\'>\s]+)/i]]),["in.tag"]);q(F([],[["atv",/^[\s\S]+/]]),["uq.val"]);q(w({keywords:G,hashComments:!0,cStyleComments:!0,types:T}),"c cc cpp cxx cyc m".split(" "));q(w({keywords:"null,true,false"}),["json"]);q(w({keywords:Q,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:T}),["cs"]);q(w({keywords:P,cStyleComments:!0}),["java"]);q(w({keywords:D,hashComments:!0,multiLineStrings:!0}),["bash","bsh","csh","sh"]);q(w({keywords:R,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py","python"]);q(w({keywords:"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),["perl","pl","pm"]);q(w({keywords:S,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb","ruby"]);q(w({keywords:B,cStyleComments:!0,regexLiterals:!0}),["javascript","js","ts","typescript"]);q(w({keywords:"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]);q(F([],[["str",/^[\s\S]+/]]),["regex"]);var aa=E.PR={createSimpleLexer:F,registerLangHandler:q,sourceDecorator:w,PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ",prettyPrintOne:IN_GLOBAL_SCOPE?E.prettyPrintOne=N:prettyPrintOne=N,prettyPrint:prettyPrint=IN_GLOBAL_SCOPE?E.prettyPrint=O:prettyPrint=O},G=E.define;"function"===typeof G&&G.amd&&G("google-code-prettify",[],function(){return aa})})();